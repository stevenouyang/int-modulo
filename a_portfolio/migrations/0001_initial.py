# Generated by Django 5.1.7 on 2025-05-13 08:51

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('is_show', models.BooleanField(default=True)),
                ('image', models.ImageField(default=None, null=True, upload_to='portfolio/main')),
                ('client', models.CharField(blank=True, max_length=255, null=True)),
                ('project_date', models.DateField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('content', wagtail.fields.StreamField([('paragraph', 0), ('h4', 1), ('h5', 2), ('h6', 2), ('ordered_list', 3), ('unordered_list', 4), ('blockquote_1', 5), ('image_1280x720', 6), ('image_1280x1280', 7), ('image_1280x800', 8), ('url', 9), ('button', 12), ('spacer', 13), ('html', 14)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {'features': ['p', 'a']}), 1: ('wagtail.blocks.CharBlock', (), {'features': ['h4']}), 2: ('wagtail.blocks.CharBlock', (), {'features': ['h6']}), 3: ('wagtail.blocks.RichTextBlock', (), {'features': ['ol']}), 4: ('wagtail.blocks.RichTextBlock', (), {'features': ['ul']}), 5: ('wagtail.blocks.CharBlock', (), {}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': '1280 x 720', 'label': 'Image 1280x720'}), 7: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': '1280 x 1280', 'label': 'Image 1280x1280'}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': '1280 x 800', 'label': 'Image 1280x800'}), 9: ('wagtail.blocks.URLBlock', (), {}), 10: ('wagtail.blocks.CharBlock', (), {'required': True}), 11: ('wagtail.blocks.URLBlock', (), {'required': True}), 12: ('wagtail.blocks.StructBlock', [[('text', 10), ('url', 11)]], {'icon': 'plus'}), 13: ('wagtail.blocks.static_block.StaticBlock', (), {'label': 'Spacer'}), 14: ('wagtail.blocks.RawHTMLBlock', (), {'icon': 'code', 'label': 'Raw HTML'})}, null=True)),
                ('meta_key', models.TextField(blank=True, max_length=100, null=True)),
                ('meta_desc', models.TextField(blank=True, max_length=160, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PortfolioIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PortfolioGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('image', models.ImageField(upload_to='portfolio/gallery')),
                ('portfolio', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_gallery', to='a_portfolio.portfolio')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioHightlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=50)),
                ('title_id', models.CharField(blank=True, max_length=50, null=True)),
                ('portfolio', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_highlight', to='a_portfolio.portfolio')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioPageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='a_portfolio.portfolio')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='portfolio',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='a_portfolio.PortfolioPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
